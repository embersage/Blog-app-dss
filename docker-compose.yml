version: "3.8"

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8001:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8002
    depends_on:
      - gateway
    networks:
      - NETWORK

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8002:5000"
    environment:
      PORT: 5000
      USERS_URL: http://user-service-balancer:5001/api/users
      POSTS_URL: http://post-service-balancer:5002/api/posts
    depends_on:
      - user-service-balancer
      - post-service-balancer
    networks:
      - NETWORK

  user-service-balancer:
    image: nginx:alpine
    ports:
      - "5001:5001"
    volumes:
      - ./nginx/user-service.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service
    networks:
      - NETWORK

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      PORT: 5001
      DB_HOST: postgres-master
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: root
      DB_NAME: blog_db
    deploy:
      replicas: 3
    networks:
      - NETWORK

  post-service-balancer:
    image: nginx:alpine
    ports:
      - "5002:5002"
    volumes:
      - ./nginx/post-service.conf:/etc/nginx/nginx.conf
    depends_on:
      - post-service
    networks:
      - NETWORK

  post-service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    environment:
      PORT: 5002
      DB_HOST: postgres-master
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: root
      DB_NAME: blog_db
    deploy:
      replicas: 3
    networks:
      - NETWORK

  postgres-master:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: blog_db
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata-master:/var/lib/postgresql/data
    command: >
      postgres
      -c wal_level=replica
      -c max_wal_senders=3
      -c synchronous_commit=off
    networks:
      - NETWORK

  postgres-slave1:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: blog_db
      POSTGRES_MASTER_HOST: postgres-master
      POSTGRES_MASTER_USER: replicator
      POSTGRES_MASTER_PASSWORD: secret
    volumes:
      - pgdata-slave1:/var/lib/postgresql/data
    command: >
      postgres
      -c wal_level=replica
      -c hot_standby=on
    depends_on:
      - postgres-master
    networks:
      - NETWORK

  postgres-slave2:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: blog_db
      POSTGRES_MASTER_HOST: postgres-master
      POSTGRES_MASTER_USER: replicator
      POSTGRES_MASTER_PASSWORD: secret
    volumes:
      - pgdata-slave2:/var/lib/postgresql/data
    command: >
      postgres
      -c wal_level=replica
      -c hot_standby=on
    depends_on:
      - postgres-master
    networks:
      - NETWORK

volumes:
  pgdata-master:
  pgdata-slave1:
  pgdata-slave2:

networks:
  NETWORK:
    driver: bridge
